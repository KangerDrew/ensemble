DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS bands CASCADE;
DROP TABLE IF EXISTS instruments CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS spots CASCADE;
DROP TABLE IF EXISTS spot_application CASCADE;

CREATE TABLE users (
  id SERIAL PRIMARY KEY NOT NULL,
  first_name VARCHAR(255) NOT NULL,
  last_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  country VARCHAR(255) NOT NULL,
  city VARCHAR(255) NOT NULL,
  street VARCHAR(255),
  province VARCHAR(255),
  post_code VARCHAR(255),
  profile_image BLOB
);

CREATE TABLE instruments(
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL
);

CREATE TABLE genres(
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL
);

CREATE TABLE bands (
  id SERIAL PRIMARY KEY NOT NULL,
  FOREIGN KEY leader_id REFERENCES users(id) ON DELETE CASCADE,
  name VARCHAR(255) NOT NULL,
  featured BOOLEAN DEFAULT TRUE,
);

CREATE TABLE spots (
  id SERIAL PRIMARY KEY NOT NULL,
  FOREIGN KEY band_id REFERENCES bands(id) ON DELETE CASCADE,
  FOREIGN KEY user_id REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY instrument_id REFERENCES instruments(id) ON DELETE CASCADE,
  title VARCHAR(255) NOT NULL,
  description TEXT,
  accepted_status BOOLEAN DEFAULT FALSE
);

CREATE TABLE spot_applications (
  id SERIAL PRIMARY KEY NOT NULL,
  FOREIGN KEY spot_id REFERENCES spots(id) ON DELETE CASCADE,
  FOREIGN KEY user_id REFERENCES users(id) ON DELETE CASCADE,
  message TEXT
); 


CREATE TABLE user_instrument (
  PRIMARY KEY CLUSTERED (user_id, instrument_id),
  FOREIGN KEY user_id REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY instrument_id REFERENCES instruments(id) ON DELETE CASCADE
);

CREATE TABLE user_genre (
  PRIMARY KEY CLUSTERED (user_id, genre_id),
  FOREIGN KEY user_id REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY genre_id REFERENCES genre(id) ON DELETE CASCADE
);

CREATE TABLE band_genre (
  PRIMARY KEY CLUSTERED (band_id, genre_id),
  FOREIGN KEY band_id REFERENCES band(id) ON DELETE CASCADE,
  FOREIGN KEY genre_id REFERENCES genre(id) ON DELETE CASCADE
);